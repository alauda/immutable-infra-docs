---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: dcsmachinetemplates.infrastructure.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: DCSMachineTemplate
    listKind: DCSMachineTemplateList
    plural: dcsmachinetemplates
    singular: dcsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DCSMachineTemplate is the Schema for the dcsmachinetemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DCSMachineTemplateSpec defines the desired state of DCSMachineTemplate.
            properties:
              template:
                properties:
                  metadata:
                    description: |-
                      ObjectMeta is metadata that all persisted resources must have, which includes all objects
                      users must create. This is a copy of customizable fields from metav1.ObjectMeta.

                      ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                      which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                      and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                      the API and some issues that can impact user experience.

                      During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                      for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                      specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                      The investigation showed that `controller-tools@v2` behaves differently than its previous version
                      when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.

                      In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                      had validation properties, including for `creationTimestamp` (metav1.Time).
                      The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                      which breaks validation because the field isn't marked as nullable.

                      In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                      types. When that happens, this hack should be revisited.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: DCSMachineSpec defines the desired state of DCSMachine.
                    properties:
                      ipHostPoolRef:
                        description: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      location:
                        properties:
                          name:
                            type: string
                          type:
                            type: string
                          urn:
                            type: string
                        required:
                        - type
                        type: object
                      providerID:
                        type: string
                      resource:
                        properties:
                          name:
                            type: string
                          type:
                            type: string
                          urn:
                            type: string
                        required:
                        - type
                        type: object
                      vmConfig:
                        properties:
                          dcsMachineCpuSpec:
                            properties:
                              quantity:
                                type: integer
                            required:
                            - quantity
                            type: object
                          dcsMachineDiskSpec:
                            items:
                              properties:
                                datastoreClusterName:
                                  type: string
                                datastoreName:
                                  type: string
                                datastoreUrn:
                                  type: string
                                format:
                                  type: string
                                mountOptions:
                                  items:
                                    type: string
                                  type: array
                                options:
                                  items:
                                    type: string
                                  type: array
                                path:
                                  type: string
                                quantity:
                                  type: integer
                                systemVolume:
                                  type: boolean
                                wipeFilesystem:
                                  type: boolean
                              required:
                              - quantity
                              type: object
                            type: array
                          dcsMachineMemorySpec:
                            properties:
                              quantity:
                                type: integer
                            required:
                            - quantity
                            type: object
                          dvSwitchName:
                            type: string
                          portGroupName:
                            type: string
                          portGroupUrn:
                            type: string
                        required:
                        - dcsMachineCpuSpec
                        - dcsMachineMemorySpec
                        type: object
                      vmTemplateName:
                        type: string
                      vmUrn:
                        type: string
                    required:
                    - ipHostPoolRef
                    - vmTemplateName
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
          status:
            description: DCSMachineTemplateStatus defines the observed state of DCSMachineTemplate.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
